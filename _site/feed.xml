<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2021-10-03T22:27:20+05:30</updated><id>http://localhost:4000/feed.xml</id><title type="html">Hacker Monk</title><subtitle>A hacker by instinct and monk by mindset.
</subtitle><author><name>Aneesh Dua</name><email>workstuff.dua@gmail.com</email></author><entry><title type="html">A Definitive guide to Git</title><link href="http://localhost:4000/tblog/2021-10-03-git-guide/" rel="alternate" type="text/html" title="A Definitive guide to Git" /><published>2021-10-03T00:00:00+05:30</published><updated>2021-10-03T00:00:00+05:30</updated><id>http://localhost:4000/tblog/git-guide</id><content type="html" xml:base="http://localhost:4000/tblog/2021-10-03-git-guide/">&lt;p&gt;Git is one of the most common skill among all sorts of developers. However, it also the one in which they struggle with in their initial years. I have also been in the same boat, hence while I was on the journey of learning it, I compiled all the resources I learnt from in this guide. The guide also contains my inputs here and there.&lt;/p&gt;

&lt;h2 id=&quot;git-intro&quot;&gt;git ‚Äìintro&lt;/h2&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;/blog/assets/img/git/git-meme.png&quot; alt=&quot;drawing&quot; style=&quot;width:500px;&quot; /&gt;
&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Where is Git? What is Git? Why is Git?&lt;/strong&gt; - &lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;Git is everywhere, at least the concept of it is. Every software development team in any organisation uses it. Heck, even I use this blog on Github pages and use Git to upload a new article. Its a version control system for software applications. It helps you manage versions on code based on the features you implement. So rather than being Tony Stark and using Mark1, Mark2 etc and saving those versions locally you opt for a smart method and use Git (Yes, Tony wasn‚Äôt as smart as you think üòõ). And its collaboration friendly, and the performance is impressive once you know what goes on under the hood.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Why don‚Äôt they teach it in school/college?&lt;/strong&gt;  -&lt;br /&gt;
I don‚Äôt know buddy, they didn‚Äôt teach taxes either. Probably have to ask the ‚ÄúCurriculum Developers‚Äù how a mitochondria can help manage codebase better than Git.üòõ&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Is it hard?&lt;/strong&gt; - &lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;No its not hard. Its seems a little complex, but you get the hang of it. But you need a collaborative environment to understand Git best, which you usually get once you join a organisation. Most freshers (like me) take time to get Git, and that is why I made this guide while I was learning myself.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;What desktop tools does one require for Git?&lt;/strong&gt; - &lt;br /&gt;
Ideally command line is all one needs. However, there are plenty of Git GUI options available online. Based on your preference, you can search for it and set it up accordingly.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;How do I setup Git on my computer?&lt;/strong&gt; - &lt;br /&gt;
Follow this &lt;a href=&quot;https://git-scm.com/downloads&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;What is a git repository?&lt;/strong&gt; - &lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;Its a directory where you put your codebase. The directory is stored online (on Github/Gitlab or equivalent) and you can have a local copy of it on your computer as well. Every repository contains a ‚Äú.git‚Äù folder which is hidden by default. This folder contains all the git related files and shouldn‚Äôt be edited manually in most cases. A repository contains your original data files,logs  with messages,author information,other information required to rebuild any version or branch of the project.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt; What is meant by forking in software development?&lt;/strong&gt; - &lt;br /&gt;
A fork is a copy of a repository. Forking a repository allows you to freely experiment with changes without affecting the original project. In pther words, you fork a copy of a repository into another repository and work on it.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;git-objects&quot;&gt;git ‚Äìobjects&lt;/h2&gt;

&lt;p&gt;At the heart of Git‚Äôs repository implementation is the object store. Over time, all the information in the object store changes and grows, tracking and modeling your project edits, additions, and deletions. Git places only four types of objects in the object store:&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;BLOBs&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;Each version of a file is represented as a BLOB. It stands for: ‚Äúbinary large object‚Äù, is a term that‚Äôs commonly used in computing to refer to some variable or file that can contain any data and whose internal structure is ignored by the program. A blob holds a file‚Äôs data but does not contain any metadata about the file or even its name.Git uses blobs to track files, but you should note that a blob stores only the contents of our file, not the name.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Trees&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;A tree object represents one level of directory information. It records blob identifiers, path names, and a bit of metadata for all the files in one directory. It can also recursively reference other sub-tree objects and thus build a complete hierarchy of files and subdirectories.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Commits&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;A commit object holds metadata for each CHANGE introduced into the repository, including the author, committer, commit date, and log message. If you see a commit log, you would find the changed lines in each of the code files along with additions and deletions. Each commit points to a tree object that captures, in one complete snapshot, the state of the repository at the time the commit was performed. The initial or first commit, or root commit, has no parent. It is often misconceived&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Tags&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;A tag object assigns an arbitrary yet presumably human readable name to a specific object, usually a commit. Although e25e93e02de231e17abc53aa9ec15d971e refers to an exact and well-defined commit. So, by now you‚Äôve got that HASH is also an important part of Git.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;git-basic_hands_on&quot;&gt;git ‚Äìbasic_hands_on&lt;/h2&gt;

&lt;p&gt;Lets get some hands on the basic tasks and terminologies of Git so that we can get started.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;How to create a repository?&lt;/strong&gt; - There are two methods:
    &lt;ul&gt;
      &lt;li&gt;Go to the Git Web UI and create a repository. This will create an empty repository directly online.&lt;/li&gt;
      &lt;li&gt;Create a repository locally. You run the following commands:
        &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;    $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /path/to/your/code/base
&lt;span class=&quot;gp&quot;&gt;    $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;p&gt;Once you have created it locally. You will still have to add some files and ‚Äúpush‚Äù this to the Git server so it gets stored remotely.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;How to clone a remote(online) repository locally?&lt;/strong&gt; - Run the command:&lt;br /&gt;
    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git clone username@host:/path/to/repository  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;How to push (upload) a local repository online to a remote server? or How to push changes from local to remote repository?&lt;/strong&gt;- &lt;br /&gt;
    &lt;ol&gt;
      &lt;li&gt;You need to create some files (if not present) in the repo directory. If there are some files and you have modified them, proceed to next step.&lt;/li&gt;
      &lt;li&gt;Stage the changes(locally). Run the command:
        &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;   $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git add &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;names of files you want to add &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the repository&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;with file extension&lt;span class=&quot;o&quot;&gt;)}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;p&gt;You can also run:&lt;/p&gt;
        &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;   $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# The . indicates to all newly added/modified files in the local repository folder.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;p&gt;Hence, in the second command all newly added/modified files are moved to the staged area.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;Commit/confirm the changes (still locally). Run the command :
        &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;   $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;message about the changes&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;p&gt;The -m option and the following message is optional but highly recommended. It just takes a few keystrokes but will surely help you and others understand your commit when its a collaborative repository.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;Push the changes to remote repository (finally). Run the command:
        &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;   $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;How to pull changes from remote repository on (probably older) local?&lt;/strong&gt;
  Run the command :
    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;    $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git pull
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;This will bring the local repository upto date with remote. However, if you made some changes on your local, this will ask you to do something with the changes. We will come to this later on.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;git-tale_of_3_trees&quot;&gt;git ‚Äìtale_of_3_trees&lt;/h2&gt;

&lt;p&gt;So far we have only covered the basics, so you understand the basic know-how and terminologies. To better understand how Git is operating and for the rest of Git stuff to be smooth, we need to look into the metaphor of the three trees. These trees are different collections of files. Each of these trees has a different job: one tree to write changes, one tree to stage them, and one to point to your last commit on a branch in your Git repo.&lt;/p&gt;

&lt;p&gt;For the workflow of adding and retrieving commits, Git uses three different versions of files:
&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;the working directory&lt;/strong&gt; -&lt;/p&gt;

    &lt;p&gt;The working tree is a single checkout of one version of the project. These files are pulled out of the compressed database in the remote Git repository and placed on disk for you to use or modify.
The working directory represents the actual files on your computer‚Äôs file system that are available to your code editor to apply changes. The working directory is a version of a particular commit, a particular snapshot of a project that you checked out. It is the version of your Git history that HEAD is pointing at, at any given moment.Files whose contents can be changed are in your working directory. Files placed in your index are getting prepared to be packaged into a commit object. These commits are saved in your Git repository. 
&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;the index/staging area&lt;/strong&gt; -&lt;/p&gt;

    &lt;p&gt;The staging area is a file, generally contained in your Git directory, that stores information about what will go into your next commit. Its technical name in Git parlance is the ‚Äúindex‚Äù, but the phrase ‚Äústaging area‚Äù works just as well.
 &lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;something called ‚ÄúHEAD‚Äù for creating and for retrieving commits&lt;/strong&gt; -&lt;/p&gt;

    &lt;p&gt;The Git directory a.k.a ‚ÄúHEAD‚Äù is where Git stores the metadata and object database for your project. This is the most important part of Git, and it is what is copied when you clone a repository from another computer. HEAD is the part of git that points to your branches. It‚Äôs a reference, and it has a pretty simple but hugely important job. HEAD points to the currently checked out branch, and that in turn points back to the last commit from that branch.(You must be thinking what is a branch? Just consider your repository main code a tree and figure out what a branch can be. We will discuss this in detail next). HEAD can move not only in time (when you check out previous commits), but it also moves when you create new branches or simply switch to other branches. It‚Äôs also the point in your Git history that you can place your next commit upon, the parent for your next commit. With every new commit, it replaces its reference to the branch currently checked out‚Äîby default, the master branch, of course. So, in effect, HEAD is a reference that frequently changes and points to two things: the branch itself, and through that, the last commit on that branch.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;/blog/assets/img/git/git-trees.png&quot; alt=&quot;drawing&quot; style=&quot;width:500px;&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;The basic Git workflow goes something like this:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;You modify files in your working tree.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You selectively stage just those changes you want to be part of your next commit, which adds only those changes to the staging area.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You do a commit, which takes the files as they are in the staging area and stores that snapshot permanently to your Git directory.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;If a particular version of a file is in the Git directory, it‚Äôs considered committed. If it has been modified and was added to the staging area, it is staged. And if it was changed since it was checked out but has not been staged, it is modified.&lt;/p&gt;

&lt;h2 id=&quot;git-branches&quot;&gt;git ‚Äìbranches&lt;/h2&gt;

&lt;p&gt;Git branches are effectively a pointer to a snapshot of your codebase, ergo a specific version of it. When you want to add a new feature or fix a bug‚Äîno matter how big or how small‚Äîyou spawn a new branch off your main (or development branch) to encapsulate your changes. This makes it harder for unstable code to get merged into the main code base, and it gives you the chance to clean up your feature‚Äôs history before merging it into the main branch.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;/blog/assets/img/git/git-branch1.jpg&quot; alt=&quot;drawing&quot; style=&quot;width:500px;&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;The diagram above visualizes a repository with two isolated lines of development, one for a little feature, and one for a longer-running feature. By developing them in branches, it‚Äôs not only possible to work on both of them in parallel, but it also keeps the main or &lt;strong&gt;parent&lt;/strong&gt; branch free from questionable code.The implementation behind Git branches is much more lightweight than other version control system models. Instead of copying files from directory to directory, Git stores a branch as a reference to a commit. In this sense, a branch represents the tip of a series of commits‚Äîit‚Äôs not a container for commits. The history for a branch is extrapolated through the commit relationships.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;A branch represents an independent line of development. It is important to understand that all branches except the main/default branch have a parent; the one from which the branch originated. This concept will be further used in many advanced concepts. Branches serve as an abstraction for the edit/stage/commit process. You can think of them as a way to request a brand new working directory, staging area, and project history. New commits are recorded in the history for the current branch, which results in a fork in the project.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;The default branch is ‚Äúmain‚Äù. The alternative term ‚Äúmaster‚Äù has been deprecated but is still used in some cases. Hence, ‚Äúmaster‚Äù or ‚Äúmain‚Äù are just the names commonly used for the‚Ä¶. wait for it‚Ä¶‚Ä¶. &lt;br /&gt;the main branch. But jokes apart, its just a name, you can name it ‚Äúfull_cake‚Äù as well (if your branches are ‚Äúpastries‚Äù üòõ). Just create a branch and set it as default branch using the Git web UI or set the default main branch in your local git settings :&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;    $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git branch &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &amp;lt;current_default&amp;gt; &amp;lt;new_default&amp;gt; &lt;span class=&quot;c&quot;&gt;# for renaming the default/main branch for the current repository&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;    $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;You can also change the global setting for default branch names when you initialise a new repository.&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;    $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; init.defaultBranch &amp;lt;custom_default_branch&amp;gt; &lt;span class=&quot;c&quot;&gt;# this will set default branch name to the custom name you set&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Just like the branch name ‚Äúmaster‚Äù does not have any special meaning in Git, neither does ‚Äúorigin‚Äù. While ‚Äúmaster‚Äù is the default name for a starting branch when you run git init which is the only reason it‚Äôs widely used, ‚Äúorigin‚Äù is the default name for a remote when you run git clone. If you run git clone -o booyah instead, then you will have booyah/master as your default remote branch. In other words, ‚Äúorigin‚Äù is a name for the remote git domain name. (yes, git has many flavours apart from github)
You can check and change the remote repo name using the following commands:&lt;/p&gt;
&lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;  $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git remote &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# check the current remote name&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;  $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git remote rename &amp;lt;current_remote_name&amp;gt; &amp;lt;new_remote_name&amp;gt; &lt;span class=&quot;c&quot;&gt;# rename the remote repo&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;How to work with branches?&lt;strong&gt;
&lt;/strong&gt;&lt;/strong&gt;    &lt;ol&gt;
      &lt;li&gt;Creating a local branch from current branch -
        &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;   $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git checkout &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; &amp;lt;new_branch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;Creating a local branch from a specific branch -
        &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;   $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git checkout &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; &amp;lt;new-branch&amp;gt; &amp;lt;from-branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;Pushing the branch to remote repository -
        &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;   $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git push origin &amp;lt;new_branch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;Deleting a remote branch -
        &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;   $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git push origin &lt;span class=&quot;nt&quot;&gt;--delete&lt;/span&gt; &amp;lt;my-branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;Deleting a local branch, run either of these commands-
        &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;   $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git branch &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &amp;lt;my-branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;p&gt;OR&lt;/p&gt;
        &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;   $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git branch &lt;span class=&quot;nt&quot;&gt;-D&lt;/span&gt; &amp;lt;my-branch-name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;Switch an already present branch -
        &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;   $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git pull &lt;span class=&quot;c&quot;&gt;# if the branch is remote,else can skip this&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;   $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git checkout &amp;lt;my-branch_name&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;List Branches -
        &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;   $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git branch &lt;span class=&quot;c&quot;&gt;# local branches&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;   $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git branch &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# remote branches&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;   $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git branch &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# all local and remote branches&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;git-merge&quot;&gt;git ‚Äìmerge&lt;/h2&gt;

&lt;p&gt;Merging is Git‚Äôs way of putting a forked history back together again. The git merge command lets you take the independent lines of development created by git branch and integrate them into a single branch.Note that all of the commands presented below merge into the current branch. The current branch will be updated to reflect the merge, but the target branch will be completely unaffected.Git merge will combine multiple sequences of commits into one unified history. In the most frequent use cases, git merge is used to combine two branches. In most common scenarios, git merge takes two commit pointers, usually the branch tips, and will find a common base commit between them. Once Git finds a common base commit it will create a new ‚Äúmerge commit‚Äù that combines the changes of each queued merge commit sequence.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Say we have a new branch feature that is based off the main branch. We now want to merge this feature branch into main.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;/blog/assets/img/git/git-merge1.png&quot; alt=&quot;drawing&quot; style=&quot;width:500px;&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Invoking this command will merge the specified branch feature into the current branch, we‚Äôll assume main. Git will determine the merge algorithm automatically (discussed below).&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;/blog/assets/img/git/git-merge2.png&quot; alt=&quot;drawing&quot; style=&quot;width:500px;&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;Merge commits are unique against other commits in the fact that they have two parent commits. When creating a merge commit Git will attempt to auto magically merge the separate histories for you. If Git encounters a piece of data that is changed in both histories it will be unable to automatically combine them. This scenario is a merge conflict and Git will need user intervention to continue.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What are the general steps to merge branches smoothly?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Confirm the receiving branch&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;Execute git status to ensure that HEAD is pointing to the correct merge-receiving branch. If needed, execute git checkout to switch to the receiving branch. In our case we will execute git checkout main.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Fetch latest remote commits&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;Make sure the receiving branch and the merging branch are up-to-date with the latest remote changes. Execute git fetch to pull the latest remote commits. Once the fetch is completed ensure the main branch has the latest updates by executing git pull.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Merging&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;Once the previously discussed ‚Äúpreparing to merge‚Äù steps have been taken a merge can be initiated by executing git merge where  is the name of the branch that will be merged into the receiving branch.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Fast Forward Merge&lt;/strong&gt;&lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;A fast-forward merge can occur when there is a linear path from the current branch tip to the target branch. Instead of ‚Äúactually‚Äù merging the branches, all Git has to do to integrate the histories is move (i.e., ‚Äúfast forward‚Äù) the current branch tip up to the target branch tip. This effectively combines the histories, since all of the commits reachable from the target branch are now available through the current one. For example, a fast forward merge of some-feature into main would look something like the following:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;/blog/assets/img/git/git-merge3.jpg&quot; alt=&quot;drawing&quot; style=&quot;width:500px;&quot; /&gt;
&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;However, a fast-forward merge is not possible if the branches have diverged. When there is not a linear path to the target branch, Git has no choice but to combine them via a 3-way merge. 3-way merges use a dedicated commit to tie together the two histories. The nomenclature comes from the fact that Git uses three commits to generate the merge commit: the two branch tips and their common ancestor.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;/blog/assets/img/git/git-merge4.jpg&quot; alt=&quot;drawing&quot; style=&quot;width:500px;&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;While you can use either of these merge strategies, many developers like to use fast-forward merges (facilitated through rebasing) for small features or bug fixes, while reserving 3-way merges for the integration of longer-running features. In the latter case, the resulting merge commit serves as a symbolic joining of the two branches.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Resolving Merge conflict&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;If the two branches you‚Äôre trying to merge both changed the same part of the same file, Git won‚Äôt be able to figure out which version to use. When such a situation occurs, it stops right before the merge commit so that you can resolve the conflicts manually. The great part of Git‚Äôs merging process is that it uses the familiar edit/stage/commit workflow to resolve merge conflicts. When you encounter a merge conflict, running the git status command shows you which files need to be resolved. Most code editors or IDEs will also show the conflicts and even offer many intuitive GUI tools for you to resolve the conflicts in the codebase. Once you have resolved all conflicts manually, you need to push the merge to the remote repository because so far everything done is in your local branch. The merge commit needs to be pushed just like any other commit.&lt;/p&gt;

&lt;h2 id=&quot;git-rebase&quot;&gt;git ‚Äìrebase&lt;/h2&gt;

&lt;p&gt;Rebase is one of two Git utilities that specializes in integrating changes from one branch onto another. The other change integration utility is git merge. Merge is always a forward moving change record. Alternatively, rebase has powerful history rewriting features. For a detailed look at Merge vs. Rebase, visit our Merging vs Rebasing guide. Rebase itself has 2 main modes: ‚Äúmanual‚Äù and ‚Äúinteractive‚Äù mode. It is a common way to integrate upstream changes into your local repository. Pulling in upstream changes with Git merge results in a superfluous merge commit every time you want to see how the project has progressed. On the other hand, rebasing is like saying, ‚ÄúI want to base my changes on what everybody has already done.‚Äù&lt;/p&gt;

&lt;p&gt;Rebasing is the process of moving or combining a sequence of commits to a new base commit. Rebasing is most useful and easily visualized in the context of a feature branching workflow. The general process can be visualized as the following:&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;/blog/assets/img/git/git-rebase1.jpg&quot; alt=&quot;drawing&quot; style=&quot;width:500px;&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;From a content perspective, rebasing is changing the base of your branch from one commit to another making it appear as if you‚Äôd created your branch from a different commit. Internally, Git accomplishes this by creating new commits and applying them to the specified base. It‚Äôs very important to understand that even though the branch looks the same, it‚Äôs composed of entirely new commits.&lt;/p&gt;

&lt;p&gt;The primary reason for rebasing is to maintain a linear project history. For example, consider a situation where the main branch has progressed since you started working on a feature branch. You want to get the latest updates to the main branch in your feature branch, but you want to keep your branch‚Äôs history clean so it appears as if you‚Äôve been working off the latest main branch. This gives the later benefit of a clean merge of your feature branch back into the main branch. Why do we want to maintain a ‚Äúclean history‚Äù? The benefits of having a clean history become tangible when performing Git operations to investigate the introduction of a regression. You have two options for integrating your feature into the main branch: merging directly or rebasing and then merging. The former option results in a 3-way merge and a merge commit, while the latter results in a fast-forward merge and a perfectly linear history. The following diagram demonstrates how rebasing onto the main branch facilitates a fast-forward merge.&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;/blog/assets/img/git/git-rebase2.jpg&quot; alt=&quot;drawing&quot; style=&quot;width:500px;&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;It is important to note that git rebase rewrites the commit history. It can be harmful to do it in shared branches. It can cause complex and hard to resolve merge conflicts. In these cases, instead of rebasing your branch against the default branch, consider pulling it instead (git pull origin master). It has a similar effect without compromising the work of your contributors.
&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How to rebase?&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Before rebasing&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It‚Äôs safer to back up your branch before rebasing to make sure you don‚Äôt lose any changes. For example, consider a feature branch called my-feature-branch:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Open your feature branch in the terminal:
    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;  $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git checkout my-feature-branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Checkout a new branch from it:
    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;  $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git checkout &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; my-feature-branch-backup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Go back to your original branch:
    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;  $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git checkout my-feature-branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;Now you can safely rebase it. If anything goes wrong, you can recover your changes by resetting my-feature-branch against my-feature-branch-backup using the following command:&lt;/p&gt;
    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;  $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git reset &lt;span class=&quot;nt&quot;&gt;--hard&lt;/span&gt; my-feature-branch-backup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;Note that if you added changes to my-feature-branch after creating the backup branch, you lose them when resetting.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Regular rebase&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;/blog/assets/img/git/git-rebase3.png&quot; alt=&quot;drawing&quot; style=&quot;width:1000px;&quot; /&gt;
&lt;/p&gt;

&lt;p&gt;With a regular rebase you can update your feature branch with the default branch (or any other branch). This is an important step for Git-based development strategies. You can ensure that the changes you‚Äôre adding to the codebase do not break any existing changes added to the target branch after you created your feature branch.&lt;/p&gt;

&lt;p&gt;For example, to update your branch my-feature-branch with your default branch (here, using main):&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Fetch the latest changes from main:
    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git fetch origin main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Checkout your feature branch:
    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git checkout my-feature-branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Rebase it against main:
    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git rebase origin/main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Force-push to your branch.(When you perform more complex operations, for example, squash commits, reset or rebase your branch, you must force an update to the remote branch. These operations imply rewriting the commit history of the branch. To force an update, pass the flag ‚Äìforce or -f to the push command. )
    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git push &lt;span class=&quot;nt&quot;&gt;--force&lt;/span&gt; origin my-feature-branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;strong&gt;Git merge vs Git rebase&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Merge takes all the changes in one branch and merges them into another branch in one commit.Let‚Äôs say you have created a branch for the purpose of developing a single feature. When you want to bring those changes back to master, you probably want merge (you don‚Äôt care about maintaining all of the interim commits).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Rebase says I want the point at which I branched to move to a new starting point. If you started doing some development and then another developer made an unrelated change. You probably want to pull and then rebase to base your changes from the current version from the repository.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;git-org_workflows&quot;&gt;git ‚Äìorg_workflows&lt;/h2&gt;
&lt;p&gt;Every organisation uses a specific workflow when managing codebase using any flavour of Git. A Git workflow is like a bureaucratic system where the members of the repository have different roles on different branches, just like any federal government. Since its not exactly a Git technique, I won‚Äôt be covering it in this guide. You can have a look at common git workflows at this &lt;a href=&quot;https://zepel.io/blog/5-git-workflows-to-improve-development/&quot; target=&quot;_blank&quot;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;git-miscellaneous&quot;&gt;git ‚Äìmiscellaneous&lt;/h2&gt;
&lt;p&gt;I have not covered all git commands and their various options as you can always refer to a &lt;a href=&quot;https://education.github.com/git-cheat-sheet-education.pdf&quot; target=&quot;_blank&quot;&gt;cheatsheet&lt;/a&gt; for that. Based on the scenarios you may face, you can figure out options now that you understand how Git works and all the major methods. Here are a few more commands that are useful on a regular basis:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Status&lt;/strong&gt; -
    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git status
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;List which files are staged, unstaged, and untracked.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Fetch&lt;/strong&gt; -
    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git fetch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;The git fetch command downloads commits, files, and refs from a remote repository into your local repo. Fetching is what you do when you want to see what everybody else has been working on. Git isolates fetched content from existing local content; it has absolutely no effect on your local development work. Fetched content has to be explicitly checked out using the git checkout command. This makes fetching a safe way to review commits before integrating them with your local repository.&lt;br /&gt;&lt;/p&gt;

    &lt;p&gt;When downloading content from a remote repo, git pull and git fetch commands are available to accomplish the task. You can consider git fetch the ‚Äòsafe‚Äô version of the two commands. It will download the remote content but not update your local repo‚Äôs working state, leaving your current work intact. git pull is the more aggressive alternative; it will download the remote content for the active local branch and immediately execute git merge to create a merge commit for the new remote content. If you have pending changes in progress this will cause conflicts and kick-off the merge conflict resolution flow.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Log&lt;/strong&gt; -
    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;Display the entire commit history using the default format.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Diff&lt;/strong&gt; -
    &lt;div class=&quot;language-console highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt; $&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;git diff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;Show unstaged changes between your index and working directory.&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Feel free to let me know in the comments below or reach out to me on the platforms(links on the left) to discuss Git. I am giving credits to the resources I used to create this guide in the links below.&lt;/p&gt;

&lt;p&gt;References : &lt;a href=&quot;https://pamodaaw.medium.com/a-simple-guide-to-starting-with-git-516f41a696f2&quot; target=&quot;_blank&quot;&gt;Medium&lt;/a&gt;,&lt;a href=&quot;https://code.tutsplus.com/tutorials/what-are-the-three-trees-in-git--cms-28188&quot; target=&quot;_blank&quot;&gt;Tutsplus&lt;/a&gt;,&lt;a href=&quot;https://git-scm.com/&quot; target=&quot;_blank&quot;&gt;Git-scm&lt;/a&gt;,&lt;a href=&quot;https://www.atlassian.com/git/tutorials&quot; target=&quot;_blank&quot;&gt;Atlassian&lt;/a&gt;,&lt;a href=&quot;https://docs.gitlab.com/&quot; target=&quot;_blank&quot;&gt;Gitlab Docs&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Image Credit: &lt;a href=&quot;https://softchief.com/&quot; target=&quot;_blank&quot;&gt;SoftChief&lt;/a&gt;,&lt;a href=&quot;https://softchief.com/&quot; target=&quot;_blank&quot;&gt;ImgFlip&lt;/a&gt;,&lt;a href=&quot;https://www.atlassian.com/git/tutorials&quot; target=&quot;_blank&quot;&gt;Atlassian&lt;/a&gt;&lt;/p&gt;</content><author><name>Aneesh Dua</name><email>workstuff.dua@gmail.com</email></author><category term="tblog" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/git/git-front.png" /><media:content medium="image" url="http://localhost:4000/assets/img/git/git-front.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">How to automatically setup your linux environment</title><link href="http://localhost:4000/tblog/2021-07-31-setup-linux/" rel="alternate" type="text/html" title="How to automatically setup your linux environment" /><published>2021-07-31T00:00:00+05:30</published><updated>2021-07-31T00:00:00+05:30</updated><id>http://localhost:4000/tblog/setup-linux</id><content type="html" xml:base="http://localhost:4000/tblog/2021-07-31-setup-linux/">&lt;h2 id=&quot;what-do-i-mean-by-environment-setup&quot;&gt;What do I mean by environment setup?&lt;/h2&gt;
&lt;div style=&quot;text-align: justify&quot;&gt;
Linux installations can be easily messed up if you are still a beginner or intermediate developer. Often, I personally found myself reinstalling the OS completely as I had messed up some configuration or the other. Once, I tried to install a newer version (not update, I was trying a new release altogether) of the linux kernel. Oh boy, did I mess up my Ubuntu. So, if you also find yourself installing and setting up your linux environment time and again like me, I have just the thing that will smooth the process like butter on warm bread. &lt;br /&gt;&lt;br /&gt;

There is a plethora of linux distros available now, with many coming with inbuilt packages for various use cases. However, more often than not you still need to install many packages and softwares for your setup. For most, installing their favourite browser and IDE falvour are the things they need to setup separately. You may wish to install your development lanugages and accordingly alter the system environment variables. For a penetration tester or security engineer, you may require installation of various tools. In my experience, many times we need to install dependencies separately as well for the tools to run. Open Source tools especially don't often come packaged in a .deb or apt package and hence we need to install their dependencies on our own. I find myself even adding extra package installers (like snap and yum) for my usage. 
&lt;/div&gt;

&lt;h2 id=&quot;how-do-we-automate-it&quot;&gt;How do we automate it?&lt;/h2&gt;
&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;/blog//assets/img/linux_automate/2.jpg&quot; alt=&quot;drawing&quot; style=&quot;width:500px;&quot; /&gt;
&lt;/p&gt;

&lt;div style=&quot;text-align: justify&quot;&gt;
I don't want you to think the title to be a clickbait, so I will cut to the chase. I assume you understand the installation of tools and packages using bash (terminal) commands. The commands we usually run in a terminal can be written in a bash .sh script that executes these commands sequentially. All one has to do then is to run &quot;chmod +x ./file_name.sh&quot; to give run permission to the script, run it and then sit back and have their favourite beverage while the script takes care of every single thing in your setup. I agree this is not a new concept or something out of the world that I am talking about. But one can't deny that it is not a popular practice, even though its pure efficiency without compromise. There are enough bash scripting resources on the internet to get you started, hence I will just link one below to get you started:&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://ryanstutorials.net/bash-scripting-tutorial/bash-script.php&quot; target=&quot;_blank&quot;&gt;Bash Scripting&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I might be the very few people to say this but code speaks louder than words (especially nicely written code :P ). So here is my init bash script for my personal linux environment setup: &lt;a href=&quot;https://gist.github.com/aneeshdua/661c6fb8a47399f8ecc2ea877ac2806b&quot; target=&quot;_blank&quot;&gt;Link&lt;/a&gt;. You will find echo commands that explain what gets installed as well. Feel free to fork it and add your flavour of setup to it. I will keep updating the gist according to my needs of course. Automating all tasks, one at a time!&lt;/p&gt;

&lt;p&gt;Image Credit: &lt;a href=&quot;https://opensource.com/sites/default/files/styles/image-full-size/public/lead-images/command_line_prompt.png?itok=wbGiJ_yg&quot; target=&quot;_blank&quot;&gt;OpenSource&lt;/a&gt;,&lt;a href=&quot;https://www.memecreator.org/static/images/memes/5307414.jpg&quot; target=&quot;_blank&quot;&gt;MemeCreator&lt;/a&gt;&lt;/p&gt;</content><author><name>Aneesh Dua</name><email>workstuff.dua@gmail.com</email></author><category term="tblog" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/linux_automate/1.png" /><media:content medium="image" url="http://localhost:4000/assets/img/linux_automate/1.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Everyone is hacked</title><link href="http://localhost:4000/tblog/2021-07-16-everyone-is-hacked/" rel="alternate" type="text/html" title="Everyone is hacked" /><published>2021-07-16T00:00:00+05:30</published><updated>2021-07-16T00:00:00+05:30</updated><id>http://localhost:4000/tblog/everyone-is-hacked</id><content type="html" xml:base="http://localhost:4000/tblog/2021-07-16-everyone-is-hacked/">&lt;p class=&quot;lead&quot;&gt;We interact with social media and various online services on a daily basis. People are getting scammed left and right. Data breach occurrences have skyrocketed over the past few years. Chances are, you may have already been hacked, atleast once.&lt;/p&gt;

&lt;h2 id=&quot;your-digital-footprint&quot;&gt;Your Digital Footprint&lt;/h2&gt;
&lt;div style=&quot;text-align: justify&quot;&gt;
All of our daily and regular tasks are online interactions. From sending important work communications to buying grocery and apparel, everything is available online. And with the virus impacting our lives immensely, we prefer online methods. Our entertainment is also online based, streaming services like Spotify, Youtube, OTT Platforms etc. Our social life has already been online for about a decade now. Rather, the question is what do we NOT do on the internet these days. Whatever you do leaves a &quot;digital&quot; footprint. Let me explain.
&lt;/div&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;/blog/assets/img/hacked/hacked_2.jpg&quot; alt=&quot;drawing&quot; style=&quot;width:500px;&quot; /&gt;
&lt;/p&gt;

&lt;div style=&quot;text-align: justify&quot;&gt;
When you are shopping on an e-commerce website, something you buy is information for product companies, something you even put on your wishlist is also important data. This gives them an idea about what you use in your life and also what you even wish to have. And with the wide category of items online, over a period of time, they might know what you like better than even your own family (I am not joking). What posts you like on social media is data, what hashtags and people you follow is data about you. From the political leaders and influencers you follow and like, it implies the views they represent is what you agree with as well. Many of you might not know, wherever you go (if you don't have your settings right), your location/travel activity is logged in your phone. You go out for a family dinner, you post a picture on your social media timeline. Now, if you add a location while posting your picture, that also is information. This information helps one know about all your favourite restaurants. When you login into your Google account in your phone or browser, your search history is associated with your account and also stored. Suppose you search for a car repair shop near you, it implies your car requires repair. This information is valuable as well. The repair shop owners can use this info to find potential clients like you and offer you their services. In one perspective you are getting the services you are looking for but on the other hand your life is not private anymore. Online surveys are no different. Many corporate giants host surveys with rewards (even real money) for people to better get to know the market, its all about the information. It is all fine as long as it is anonymous, but when you get targeted marketing advertisements meaning whatever you do online gets associated with your online identity, people get to know more about you than you want them to know. In other words, privacy goes boom.
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p align=&quot;center&quot;&gt;
  &lt;img src=&quot;/blog/assets/img/hacked/hacked_meme.jpg&quot; alt=&quot;drawing&quot; style=&quot;width:500px;&quot; /&gt;
&lt;/p&gt;

&lt;h2 id=&quot;digital-scams&quot;&gt;Digital Scams&lt;/h2&gt;

&lt;div style=&quot;text-align: justify&quot;&gt;
A few years ago we used to recieve scam emails and SMSes giving us free rewards or lucky draw winnings. The scammers have upped their game now and now use popular platforms that we trust (I shall not name any platforms as its not their fault). Many of us have become aware about digital scams as they have been common as of late, especially with the popular use of e-wallets and UPI based transaction methods. Many reselling platforms and e-payment portals are used and the less tech savvy are fooled with ease. Often the person on the other end of the call sounds so sophisticated in their language and tone that even educated people and even those working for financial institutions get fooled easily. However, the scams are not just limited to payment related apps or portals, its also our messaging services we use very day. Someone getting a hold of our email or social media or messaging account is just as dangerous as identity theft is a major issue these days. According to NortonLifeLock, nearly 330 million people across 10 countries were victims of cybercrime and more than 55 million people were victims of identity theft in 2020.&lt;/div&gt;

&lt;p&gt;I have elaborated more on &lt;a href=&quot;https://aneeshdua.github.io/blog/tblog/2019-05-13-phishing/&quot; target=&quot;_blank&quot;&gt;phishing&lt;/a&gt; (a.k.a digital scams) in another tech article, how its actually done and why it still is the most efficient way of stealing money and gaining unauthorised access.&lt;/p&gt;

&lt;h2 id=&quot;data-breaches&quot;&gt;Data Breaches&lt;/h2&gt;

&lt;div style=&quot;text-align: justify&quot;&gt;
When we register on a company's platform, the company stores the data associated with our account. This data can be just basic information like name and email-id but can also extend to confidential data such as Social Security number(Aadhar number), phone number, card details, home address etc. Now what if a malicious hacker gains access of this data? Of course many companies do their best to keep our data protected, data breaches still happen as nothing is ever completely secure. Also, many upcoming companies don't allocate budget to information security, with the perspective that who is going to hack them. This continues till the time someone actually does it. The data is usually not stored in readable form and is encrypted, but we have seen our credentials and personal information getting leaked and sold on the dark web, breached from small and big companies alike. It is evident that the data is attainable by malicious guys. So this is another leak point of your private data and many companies inform you of such incidents but on the other hand, many don't even acknowledge such incidents if brought to public (via independent researches) to avoid a PR crash. Often, hackers gain exclusive access to such data and hold it for ransom. Many companies don't pay the ransom, and take a PR hit. However, those that pay the ransom are attacked again,statistically speaking. It is obvious that the companies that paid the ransom once, are likely to pay again as compared to those who didn't the first time, ransom 101. 
&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/img/hacked/hacked_3.jpg&quot; alt=&quot;Full-width image&quot; class=&quot;lead&quot; width=&quot;80&quot; height=&quot;50&quot; /&gt;&lt;/p&gt;
&lt;div style=&quot;text-align: center&quot;&gt;
Number of Data Breach Incidents over the past decade
&lt;/div&gt;

&lt;h2 id=&quot;unknowingly-sharing-your-private-data&quot;&gt;Unknowingly sharing your private data&lt;/h2&gt;
&lt;div style=&quot;text-align: justify&quot;&gt;

The bits and pieces of digital footprint you leave online are collated together and are used to identify you. Your activity is tracked. By activity I mean is where you go, what you search, what posts you like, what food you order, what apparel you wear etc. In other words, your life is continously logged in some server on the other side of the world. So how can they take this data without letting you know. Here is the catch, they often tell you before they do. We are just too lackadaisical or clueless about what is going on. Most of this data is tracked through the long software and cookie agreements you &quot;Accept/Allow&quot; while using the apps and websites. The permissions we give to smartphone apps is something many people take lightly. Also, many popular social media platforms have tracking settings enabled by default and the non-tech savvy user often misses them. Hence, more often than not, one is unwillingly but at the same time volunatarily sharing all private data for tracking. This data is shared with &quot;third-party services/companies&quot; that use this data for their marketing and eventually profit. This data even helps in the next election or the next agenda in the parliament. There is a documentary on Netflix called &quot;The Great Hack&quot; which elaborates about how the 2016 U.S presidential elections were won using the digital footprint of the citizens and targeted advertisements. Long story short, an analytics company had plethora of &quot;data points&quot; on each citizen of the country using which they could determine which states and citizens were in their favour and they could target the ones that weren't, using targeted sorts of social media means down to the invidividual voter's level. Thats a new level of electoral manipulation on a very large scale, to say the least. And to top that, a person requested the &quot;data points&quot; they had on him, however, the company never showed him the data which was technically his, period.

The other day I was looking for a particular electronics store contact number (for a smartphone related enquiry), so I did what everyone else does these days. I hit up a search on the most popular search engine - &quot;StoreName AreaName Contact Number&quot; (I have proxified the names obviously, but you get the idea). While I had just started a conversation on the call with the guy at the store I was looking for, I had already got missed calls from competitor stores nearby. I called back just to confirm my suspicions, and on an even more surprising note, he already knew that it was about a phone related enquiry and this was not even part of my latest web search. I think such incidents have happened to all of us more times than we can give this incident a benefit of the doubt or call it a coincidence. Its all just good business. I am sure 9 out of 10 people would not like this level of intrusiveness of their life. At this point, I don't even know who had their their prying eyes on my life and who sold the information to the competitor stores. Even the Internet Service Provider (ISP), the company that gives broadband services at home, has access to what we browse on the internet, so they might be also be the spy. Who knows? 
&lt;/div&gt;

&lt;h2 id=&quot;what-can-we-do&quot;&gt;What can we do?&lt;/h2&gt;
&lt;div style=&quot;text-align: justify&quot;&gt;
With the bunch of stuff that I discussed and probably scared you a bit now, let's talk about what we can do and what we should do. Its a tricky situation if I am being honest, as we are dependent on web services but also need our privacy. Here are a few things to get started:
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Check if your any of your online accounts‚Äôs credentials have been in any data breach using your email id on &lt;a href=&quot;https://haveibeenpwned.com/&quot; target=&quot;_blank&quot;&gt;haveibeenpwned&lt;/a&gt;. If they have, make sure you have changed your password after the time of the data breach.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Change your password every 3-6 months as a good practice. All companies enforce this policy for their employees work accounts and with good reason. If you have a lot of accounts like me and have trouble remembering passwords, go for a PAID Password Manager. Don‚Äôt fall for the free ones, nothing is free. What seems free, is using your data most probably.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Use incognito/private mode in your browser for web searching for products,courses, or anything that can be bought.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can also use a VPN (go for a paid one) for anonymity of your web searches and also general network security. This also protects from your ISP knowing what all you visit on the internet.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Do a web search to disable tracking for all your social media accounts and you will find guides for them.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Whenever giving permissions to a mobile app, make sure to disallow any permissions that should not be needed by the app. For example - A wallpaper app should not require your camera or GPS location. So make sure to look out for these.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For a less tech savvy person, all this will be a load of information to process and maybe scary. But times are changing and we need to adapt so we don‚Äôt get conned, by either petty scammers or big data giants. More importantly, we need to teach kids about staying safe online. Just like we tell them not to eat candy given by strangers, we also need to teach them to make sure they know what apps they install and use and  with whom they even talk to online. As the founder of Tor, Roger Dingledine, says, ‚ÄúIf you care about privacy online, you need to actively protect it.‚Äù, so its about time we get a hold of our own online life and even start paying for security and privacy like we pay for our amenities. Paying for privacy and security should be the new normal.&lt;/p&gt;

&lt;p&gt;Image Credit: &lt;a href=&quot;https://www.reddit.com/r/memes/comments/gqepd9/they_learned_from_grizzle/&quot; target=&quot;_blank&quot;&gt;Reddit&lt;/a&gt;,&lt;a href=&quot;https://photostockeditor.com/free-images/id-theft&quot; target=&quot;_blank&quot;&gt;PhotoStockEditor&lt;/a&gt;,&lt;a href=&quot;https://twitter.com/dfmooc/status/1271082005321695232&quot; target=&quot;_blank&quot;&gt;Digital Footprint via Twitter&lt;/a&gt;, &lt;a href=&quot;https://www.iii.org/customprint/fact-statistic/facts-statistics-identity-theft-and-cybercrime&quot; target=&quot;_blank&quot;&gt;Insurance Information Institute&lt;/a&gt;&lt;/p&gt;</content><author><name>Aneesh Dua</name><email>workstuff.dua@gmail.com</email></author><category term="tblog" /><summary type="html">We interact with social media and various online services on a daily basis. People are getting scammed left and right. Data breach occurrences have skyrocketed over the past few years. Chances are, you may have already been hacked, atleast once.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/hacked/hacked_1.jpg" /><media:content medium="image" url="http://localhost:4000/assets/img/hacked/hacked_1.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">The M&amp;amp;M of spiritual life</title><link href="http://localhost:4000/lblog/2021-04-06-mandm/" rel="alternate" type="text/html" title="The M&amp;amp;M of spiritual life" /><published>2021-04-06T00:00:00+05:30</published><updated>2021-04-06T00:00:00+05:30</updated><id>http://localhost:4000/lblog/mandm</id><content type="html" xml:base="http://localhost:4000/lblog/2021-04-06-mandm/">&lt;p class=&quot;lead&quot;&gt;Every motivational speaker or life guru talks about atleast one of the M&amp;amp;M- Meditation and Mindfulness. Often, these two are stated as the first step for one to progress the spiritual journey of life. Also, it is advised to practice these habits for mental well being. But no one really talks about how does a person doing graduate studies or doing a 9-5 job, start from zero and then progress to eventually become decent at it (or maybe master it); the starting stage of anything is usually the most difficult part.&lt;/p&gt;

&lt;h2 id=&quot;the-myth-around-meditation&quot;&gt;The myth around Meditation&lt;/h2&gt;
&lt;p&gt;There is a very common misconception about meditation that it is the act of sitting like a saint (for example- the lotus posture) and focusing on your breathing. Some religious people may also ask you to focus on the image or the thought of the avatar of God you worship. This is not all meditation is, but yes this is one way of practicing it. The core purpose of meditation is to learn to clear your head and enter the zone of peace and calm. You have to focus on attaining inner peace. Now what gives you peace, be it a God‚Äôs thought or something else, is for you to unravel yourself and find out. Its not about the lotus position or breathing in specific. These are just means of helping you achieve the meditative state.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/img/mandm/2.jpg&quot; alt=&quot;Full-width image&quot; class=&quot;lead&quot; width=&quot;80&quot; height=&quot;50&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;mindful-or-mindfull&quot;&gt;Mindful or Mindfull&lt;/h2&gt;
&lt;p&gt;The modern world revolves around fast moving lives. We are jumping from one thing to the next. Multi tasking is the norm for quite a while now. The act of being mindful is quite the opposite. Suppose you are washing the dishes. Most probably you are washing the dishes just to get the chore done. You are probably thinking of what you are going to do next and if you are a super duper plan freak and know the next 5 tasks you are going to do, you will be probably be thinking about something else. Point is, you are not mind&lt;strong&gt;ful&lt;/strong&gt; while washing the dishes, but rather mind&lt;strong&gt;full&lt;/strong&gt;. Your mind is divided into washing and what you are thinking about. The sutra of mindfulness, if I simply put it- ‚ÄúDon‚Äôt think about anything else while doing something. Don‚Äôt do what you are doing just to get it over with. Be conscious of what you are doing at hand.‚Äù When you are mindful while doing anything, you actually think and talk to yourself only about that. You discover more about the relationship between yourself and what you are doing. Your sprinting and multiprocessing mind is brought to a rather serene state. Its like there is nothing better at the moment in the entire world apart from you and the dishes you are washing. The tranquil mind enjoying the time washing the dishes. Slowly, this chore becomes a ‚Äúme‚Äù time for you to enjoy along with the company of dishes. And this realisation is a personal understanding between you and the dishes. This is something I find hard to explain by mere words.&lt;/p&gt;

&lt;p&gt;If I would have said that outside of context, you will probably say ‚ÄúWhat?‚Äù(you might still say it even in context..lol)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/img/mandm/3.jpg&quot; alt=&quot;Full-width image&quot; class=&quot;lead&quot; width=&quot;80&quot; height=&quot;50&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I understand that was pretty abstract. Infact you might ask, what is there in being mindful for a small task such as washing the dishes.  Well, the straight up answer is I really cannot say that you shall achieve such and such a definitive thing after embracing the ‚Äútiring‚Äù chore of splashing water over utensils. Maybe you discover a more efficient way of washing the dishes since that is the only thing on your mind right now. But the whole point is to create a sense of habit and also a sense of calm in your mind before it gets overwhelmed. The aim is to cultivate a habit of being focused on only what you are doing at the moment. How many times it has happened you made a mistake at work or study just because your mind was divided into 16 tasks(just a random number, feel free to pick yours). But if your mind is trained to be focused only on the current task at hand, the chances of making mistakes would be scarce. Another perspective to being mindful is that you are consciously breaking out of the rat race the modern living comes with. You are actually living and not in constant survival mode; easier said than done. You are conscious about yourself and the task at hand. The most important time is now and ‚Äúlive the moment‚Äù in truest sense of the phrase.&lt;/p&gt;

&lt;h2 id=&quot;why-are-mms-so-delicious&quot;&gt;Why are M&amp;amp;Ms so delicious?&lt;/h2&gt;
&lt;p&gt;Your mind and heart are really chaotic. One feeling after another, one thought after another. The category of thought or feeling(good or bad; happy or sad; angelic or devilish)  is also not really definitive at a given point of time. Sooner or later we have our day(s) when we are just tired, just need a ‚Äúbreak‚Äù. Yes I am talking about the can‚Äôt do this anymore kind of day(s). To avoid this sort of mental and will-power breakdown, it is important we take a break before our mind engine gets overheated. I feel that M&amp;amp;M are the key to the latter. Meditation and mindfulness are not very different. Infact, mindfulness is one way of meditating. I can give you a simple exercise incase you want one. Day one- Take a walk in the park, be only walking while you are at it. Explore the path and your legs while walking. Simply, walk the walk.(This is pure mindfulness)&lt;/p&gt;

&lt;p&gt;Now you start doing it daily, you can change your focus on not the walk but self introspection. Maybe you want to talk to God. Maybe there is a thought on your subconscious mind. Something that is affecting your mood maybe. Or some question about your life or yourself you are not able to find the answer to. You are now only thinking about that. This is meditation. And with personal experience, I can say that this really works if you want to find yourself or if you wish to untangle the threads of your thoughts.&lt;/p&gt;

&lt;p&gt;A notable thing about M&amp;amp;M is that irrespective of your religious or regional belief, meditation is a common practice amongst all. Yoga(not the westernised exercise but spiritual original Indian one), which aims for utmost quality of physical and mental state includes meditation as one of the vital parts of a yoga abhyas(exercise). You will find equivalent practices in Buddhist and Zen beliefs as well.&lt;/p&gt;

&lt;p&gt;Incase you wish to learn more about mindfulness, I would recommend reading the works of Thich Nhat Hanh, who talks about it in much elaborative and detailed manner.I will leave you with a clipping of my favourite movie trilogy of all time- &lt;a href=&quot;https://www.youtube.com/watch?v=8lAKfUD169U&quot; target=&quot;_blank&quot;&gt;Kung Fu Panda&lt;/a&gt;. Cheers!&lt;/p&gt;

&lt;p&gt;Image Credit: &lt;a href=&quot;https://thebestbrainpossible.com/&quot; target=&quot;_blank&quot;&gt;BestBrainPossible&lt;/a&gt;, &lt;a href=&quot;https://pinterest.com/&quot; target=&quot;_blank&quot;&gt;Pinterest&lt;/a&gt;&lt;/p&gt;</content><author><name>Aneesh Dua</name><email>workstuff.dua@gmail.com</email></author><category term="lblog" /><summary type="html">Every motivational speaker or life guru talks about atleast one of the M&amp;amp;M- Meditation and Mindfulness. Often, these two are stated as the first step for one to progress the spiritual journey of life. Also, it is advised to practice these habits for mental well being. But no one really talks about how does a person doing graduate studies or doing a 9-5 job, start from zero and then progress to eventually become decent at it (or maybe master it); the starting stage of anything is usually the most difficult part.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/mandm/1.jpg" /><media:content medium="image" url="http://localhost:4000/assets/img/mandm/1.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Writeup for NC-Bug-Bounty CTF Challenge</title><link href="http://localhost:4000/tblog/2021-03-24-ncbugbounty/" rel="alternate" type="text/html" title="Writeup for NC-Bug-Bounty CTF Challenge" /><published>2021-03-24T00:00:00+05:30</published><updated>2021-03-24T00:00:00+05:30</updated><id>http://localhost:4000/tblog/ncbugbounty</id><content type="html" xml:base="http://localhost:4000/tblog/2021-03-24-ncbugbounty/">&lt;p&gt;I had developed two challenges for Winja CTF 2021, - Secretive Flights and NC-Bug-Bounty. NC-Bug-Bounty was not solved by any participant, so here goes the solution writeup for it.&lt;/p&gt;

&lt;h2 id=&quot;the-landing-page&quot;&gt;The landing page&lt;/h2&gt;

&lt;p&gt;The landing page of the challenge is similiar to any bug bounty‚Äôs page. We are given an inscope domain and the story about the login portal being insecure is given to us.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/img/winja/landing-page.png&quot; alt=&quot;Full-width image&quot; class=&quot;lead&quot; width=&quot;80&quot; height=&quot;50&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;first-interns-submission-round-1&quot;&gt;First Intern‚Äôs Submission (Round 1)&lt;/h2&gt;

&lt;p&gt;Coming to the inscope domain, the first login portal is shown. After some basic enumeration you can understand that the credentials to login are neither in the web page‚Äôs source code nor in any text file on the web directory. SQL Injection should strike your mind at this time. If it didn‚Äôt, well, you will get it next time. And you are feel free to try out tools like SQLMap, which will probably fail, coz I tested them (Manual injection demon strikes :D)&lt;/p&gt;

&lt;p&gt;Lets assume the SQL query in the backend to be something like:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Users&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&quot; + username + &quot;'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&quot; + password + &quot;'&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;&quot;;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The basic SQL Injection payload for such a query can be found out if not known by a simple google search:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;admin&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' or '&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'='&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Hence, the query that runs in the backend becomes:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Users&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'admin'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'1'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&quot; + password + &quot;'&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;&quot;;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Hence, even though you do not know the real credentials, you were able to bypass the login.&lt;/p&gt;

&lt;h2 id=&quot;second-interns-submission-round-2&quot;&gt;Second Intern‚Äôs Submission (Round 2)&lt;/h2&gt;

&lt;p&gt;It is pretty clear that the challenge is SQL Injection based, hence lets continue in that direction. Here, we are given a hint:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;This intern‚Äôs work seems secret-ive. I guess he has his secrets on our database resources.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So we understand that there is a secret table on the same database which we need to access. After some hit and trial or after the hint during the contest, you can make out that the table name is ‚Äúsecret_table‚Äù. Creating a union query so as to get the result from another table:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s1&quot;&gt;' union select secret from secret_table#
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;And it works! Even though you didn‚Äôt get to know the secret, you bypassed the second round. Isn‚Äôt that what matters? Right?‚Ä¶..Right?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/img/winja/secrets-meme.gif&quot; alt=&quot;Full-width image&quot; class=&quot;lead&quot; width=&quot;80&quot; height=&quot;10&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;third-interns-submission-round-3&quot;&gt;Third Intern‚Äôs Submission (Round 3)&lt;/h2&gt;

&lt;p&gt;The hint for this round is:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Even this girl seems secretive. However, she said all the SQL commands will be blanked in the inputs!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So the takeaway from this is that there is still a secret_table in the database and that any SQL command you inject will be blanked- meaning it will be removed. So how do we get around this?&lt;/p&gt;

&lt;p&gt;What if, you make this filter a double-whammy. You create such a query on which upon nullifying the SQL commands, you get the right one? For example -&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s1&quot;&gt;' uniunionon selselectect secret from secret_table#
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pretty clever,right?&lt;/p&gt;

&lt;h2 id=&quot;fourth-interns-submission-round-4&quot;&gt;Fourth Intern‚Äôs Submission (Round 4)&lt;/h2&gt;

&lt;p&gt;This intern‚Äôs information is:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I don‚Äôt know why are all these interns so secretive. This guy claims all the SQL commands will not be processed at all. He says he has considered both CASES.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Continuing on the still unknown secret, we now know that the SQL commands will not be processed. We can imply that if we include any SQL statements like SELECT or UNION, the input won‚Äôt be processed. However, there must be a catch(afterall, its a CTF). The hint also mentions about ‚Äúboth CASES‚Äù. Think, what has two cases?????&lt;/p&gt;

&lt;p&gt;I hope you got it, incase you didn‚Äôt, its the &lt;strong&gt;UPPER&lt;/strong&gt; and &lt;strong&gt;LOWER&lt;/strong&gt; case. So the intern didn‚Äôt consider the &lt;strong&gt;mIxEd&lt;/strong&gt; case. So the injection becomes:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s1&quot;&gt;' UNiON SElECT secret FrOm secret_table#
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You might be thinking, how many interns did they hire?? I say you should have contacted Ramlal Kulkarni. (Only those who participated can get the joke,sorry for others)&lt;/p&gt;

&lt;h2 id=&quot;fifth-interns-submission-round-5&quot;&gt;Fifth Intern‚Äôs Submission (Round 5)&lt;/h2&gt;

&lt;p&gt;Let‚Äôs just get to the hint now, If I were you I would really wanna see the secret&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I guess I should hire non-secretive interns. Still lets give the last one a try. She doesn‚Äôt really like spaces tbh.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So the hint is clear and simple, there is still the secret table and this intern has found a way to block spaces? After all, who uses spaces in their username and password?&lt;/p&gt;

&lt;p&gt;An interesting thing about SQL comments is that ‚Äú/**/‚Äù gets parsed as a space. Let‚Äôs use this to our advantage:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s1&quot;&gt;'/**/UNION/**/SELECT/**/secret/**/FROM/**/secret_table#
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And you get the flag finally,&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;flag{nc-bug-bounty_t00k_y0u_l0ng_3n0ugh}&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;end-notes&quot;&gt;End notes&lt;/h2&gt;

&lt;p&gt;There would be many different injections possible for the various rounds. Please, drop in the comments below what you came up with. Also, for people who are wondering if you could use the ASCII values to substitute SQL statements, you can do that in one of the rounds. In other rounds, I had blocked it so as to not make it the god query for the challenge.&lt;/p&gt;

&lt;p&gt;Interpreting the hints correctly and appropriate google search about SQL Injection Payloads would have helped one to solve the challenge all the way through.You can find the source code on my &lt;a href=&quot;https://github.com/aneeshdua/Winja-CTF-Challenges&quot; target=&quot;_blank&quot;&gt;Github&lt;/a&gt;. Join the discord &lt;a href=&quot;https://discord.com/invite/AawhaQy&quot; target=&quot;_blank&quot;&gt;server&lt;/a&gt; if you haven‚Äôt already. You can ping any of the mods for challenge related questions and also if you want to join like minded people. If you want to dm me, feel free to do so. Add me in discord(ghost#3538). Peace‚úå.&lt;/p&gt;</content><author><name>Aneesh Dua</name><email>workstuff.dua@gmail.com</email></author><category term="tblog" /><summary type="html">I had developed two challenges for Winja CTF 2021, - Secretive Flights and NC-Bug-Bounty. NC-Bug-Bounty was not solved by any participant, so here goes the solution writeup for it.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/winja/winja-logo.png" /><media:content medium="image" url="http://localhost:4000/assets/img/winja/winja-logo.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Deciphering long lasting relationships</title><link href="http://localhost:4000/lblog/2021-03-18-whovswho/" rel="alternate" type="text/html" title="Deciphering long lasting relationships" /><published>2021-03-18T00:00:00+05:30</published><updated>2021-03-18T00:00:00+05:30</updated><id>http://localhost:4000/lblog/whovswho</id><content type="html" xml:base="http://localhost:4000/lblog/2021-03-18-whovswho/">&lt;p&gt;The above quote might seem so simple and many of might already make out what I am about to talk about. Enough intro, lets talk.&lt;/p&gt;

&lt;h2 id=&quot;the-context-the-big-picture&quot;&gt;The context; the big picture&lt;/h2&gt;

&lt;p&gt;Consider a 100% pure and calm lake. Now a small contaminated water drop drops into this lake and causes ripples in the lake. The lake became disturbed for a while, before being calm again. But now it has some impurity in it. The essence isn‚Äôt the same anymore. Suddenly, someone feeds this lake more and more such drops, thereby causing a regular disturbance ripple and increased amount of contamination. Now in this, replace the lake with your relationship and the dirty water drop with misunderstandings or heated fights with personal attacks.&lt;/p&gt;

&lt;p&gt;Over the years, we have seen the increased number of nuclear families, short marriages, broken blood relationships and lack of good friendships. More often than not, especially in case of loved ones, it is miscommunication and improper handling of disagreements that leads to this unfortunate consequence. A small misunderstanding causes a heated debate which eventually leads to bitterness in the relationship, in most cases. You know what is the worst? When the personal attacks start popping out of angered emotions.This is the lowest point. Once you start attacking each other personally, I would say all objectivity is lost, and you are ultimately nowhere forward. Sounds familiar? Happens to almost all of us I believe.&lt;/p&gt;

&lt;h2 id=&quot;what-usually-happens-the-smaller-picture&quot;&gt;What usually happens; the smaller picture&lt;/h2&gt;

&lt;p&gt;Whenever you and your close one are faced with a disagreement ,a conflict, or a circumstance created problem, the EGO enters the arena. Sad but true. You have one thing in mind and the other has the polar opposite of it. What happens next? You both start argueing on why you are right, ultimately losing the real perspective and the problem behind. It becomes a UN level debate wtih him/her even though both of you want (world) peace. Pun intended. You feel you are right.Interjection to your opinion sparks heated conversation. And trust me, the conversation isn‚Äôt lit.&lt;br /&gt;&lt;/p&gt;

&lt;p class=&quot;faded&quot;&gt;(I know you must be thinking, does this guy have a point or just has a bunch of bad puns put together? I guess I really can‚Äôt help myself at times.**Chuckles on the puns**)&lt;/p&gt;

&lt;p&gt;A very common thing that I have noticed is that interrelationship problems originate from small and often, stupid misunderstandings. Small instances that occur or misinterpretation of what one said to the other is something all of us can relate to. Infact, a bad mood completely alters our viewpoint, makes us feel cynical about everything. Suddenly everyone around us is just straight up bad. These misunderstandings are the cause for negative bias towards the other if not handled delicately. Our mood affects how we interpret and react to something. End result? You are angry at your loved one, probably without good cause. Your consequent actions and words impacted by the latter most probably leads to a fight. Now both of you are in angered and rather confused emotional state. For most of us, the ego dominates. The arguement brews. You are now versus each other. Now take a breather. Wouldn‚Äôt it be better if it was both of you vs the problem? Facing the problem together? #Foodforthought&lt;/p&gt;

&lt;h2 id=&quot;so-how-do-we-properly-handle-this&quot;&gt;So how do we properly handle this?&lt;/h2&gt;

&lt;p&gt;You might be saying that easier said than done. How do we actually practice this?&lt;br /&gt;
We are built in a way that it is almost natural for us to engage all defenses when we as an individual are told we aren‚Äôt right. Its the rejection reaction if I may say so. It is a very mature and probably difficult thing to do to actually acknowledge the opposite perspective and addressing it as viable or maybe correct a step further. Long story short, the meaning of ‚ÄúUs vs the Problem‚Äù rather than ‚ÄúYou vs Me‚Äù is to realise that you are not facing this issue as an individual, but together. As one. In times of adversity,we forget such simple things hence this becomes easier said than done. You remove your individuality since this is not only yours to handle, use the trust that you and your loved one have built. Focus on the problem rather than proving yourself right and winning the arguement. Infact, it shouldn‚Äôt even be an arguement. Yes, clashes or differences of opinion don‚Äôt have to be arguements or debates. Normalise conflict resolution through DISCUSSION rather than debating the motion as to who is right.&lt;/p&gt;

&lt;h2 id=&quot;end-notes&quot;&gt;End notes&lt;/h2&gt;

&lt;p&gt;See the beauty of this discussion approach if I may call it so, is that its all in your control. Life rarely gives that, if I am being really honest. Your perspective, your attitude, your way of talking, its all YOU.To build this perspective takes time and patience. It also requires the cooperation of your partner or loved one. Speaking in a more practical manner, for every kind of problem in relationships, you can do this. Your approach towards the conflict needs to be in a way you are addressing the problem, not fighting your solution on how to deal with it. You have to throw the dominating ego aside, DISCUSS the issue even though it may affect you more directly. Discussing instead of complaining or debating is the way I like to see it.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;One question that you may have is that what if the other person doesn‚Äôt react similiarly? Well feel free to express this to them as a seperate discussion if you share such an understanding on things. After all, trying is life, isn‚Äôt it?&lt;br /&gt;&lt;/p&gt;

&lt;p class=&quot;faded&quot;&gt;(Or is life trying? I say depends on your day. #AnotherFoodforthought)&lt;/p&gt;

&lt;p&gt;The most joyous consequence of this is that your relationship comes out stronger than before. You overcome issues by teamwork, which strengthens the bond. So basically what you just did is you played an UNO Reverse card on the adverse situation. In trying times that test your relationship, you come out even better. I would even say that, winning an arguement is almost kiddish. And from personal experience, the satisfaction and joy of striding forward together makes you feel elated at a completely other level.  After all, I think, what is love, if not teamwork persevering?&lt;/p&gt;</content><author><name>Aneesh Dua</name><email>workstuff.dua@gmail.com</email></author><category term="lblog" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/usvsproblem/1.jpg" /><media:content medium="image" url="http://localhost:4000/assets/img/usvsproblem/1.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Hardening VS Countermeasures for Cyber Security</title><link href="http://localhost:4000/tblog/2019-06-23-hardening-counter/" rel="alternate" type="text/html" title="Hardening VS Countermeasures for Cyber Security" /><published>2019-06-23T00:00:00+05:30</published><updated>2019-06-23T00:00:00+05:30</updated><id>http://localhost:4000/tblog/hardening-counter</id><content type="html" xml:base="http://localhost:4000/tblog/2019-06-23-hardening-counter/">&lt;p class=&quot;lead&quot;&gt;Cyber Attacks are exponentially increasing by the day. The omnipresence of Internet enabled devices around us makes such attacks terrorizing for us. Thus, to resist such threats, it is essential to develop mechanisms and protect our devices and networks. There are mainly two ways to go about it, either we build countermeasures against attacks or either we implement hardening of devices and connection methods. How should we go about it?
Lets discuss‚Ä¶‚Ä¶.&lt;/p&gt;

&lt;h2 id=&quot;hardening&quot;&gt;Hardening&lt;/h2&gt;
&lt;p&gt;Hardening one of the most important components of system security. It is a method of securing devices/networks by minimizing the area exposed to the public. This makes sure that there are less vulnerabilities out in the open. This is done largely by removing unnecessary software, hardening default credentials, disabling unnecessary services, and modifying other configuration parameters from default values so that the system works securely for a focused set of services.
For networks and systems of the organisational and corporate level, the risk of security breach is high. Their systems are diverse and widely spread, hence, a hacker only needs to find one weak point in the plethora of connected devices to get into the network and he is really spoilt for choice! On the contrary, smaller networks such as home networks are relatively more secure as they have less areas of susceptibility.&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;No matter whichever new system is setup, the hardening process is critical to establish a baseline of system security, especially for an organization. Moreover, when a new system is bought, it comes pre-installed with a number of software, applications, services, drivers, features, and even bloatware. All these are points at which the security fence is weak and can be easily broken by hacker(s). It is, therefore, necessary to remove the unnecessary software and configure the necessary ones for additional security.&lt;/p&gt;

&lt;p&gt;The actions that are normally taken when performing system hardening are:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Disabling certain ports and stopping certain services&lt;/li&gt;
  &lt;li&gt;Removing certain features of the operating system&lt;/li&gt;
  &lt;li&gt;Uninstalling unnecessary and vulnerable software&lt;/li&gt;
  &lt;li&gt;Changing default settings and removing features and applications not needed by your organization&lt;/li&gt;
  &lt;li&gt;Ensuring each system‚Äôs security configurations are set properly&lt;/li&gt;
  &lt;li&gt;Ensuring OS software, firmware, and applications are up to date&lt;/li&gt;
  &lt;li&gt;Ensuring the system hardening process evolves constantly, with maximum automation and updating&lt;/li&gt;
  &lt;li&gt;Testing during hardening of the systems to make sure anything critical to the organization is not impacted&lt;/li&gt;
  &lt;li&gt;Updating the hardening to include new patches or software versions in the standard configuration, so the addition of a similar system in future does not come with the old weaknesses&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;countermeasures&quot;&gt;Countermeasures&lt;/h2&gt;
&lt;p&gt;The developers of operating system and software do not think much about the security aspect. This is understandable because they are developers and not cyber security specialists. Hackers often exploit the developers‚Äô code itself and compromise the integrity, availability and confidentiality of the systems. Hence, it is essential to have countermeasures so as to make software and operating systems secure.
In cyber security, methods that provide security against vulnerability threats and cyber attack(s) are known as cyber crime countermeasures. Antiviruses and Firewalls are the most common methods of providing cyber attack countermeasures. The companies that provide these, scan the internet for new malware and also perform vulnerability testing on the systems they are made to protect. This is done on a regular basis as they have to keep updating the operating systems for patching the bugs and release anti-malware methods.&lt;br /&gt;
There are mainly four basic types of countermeasures:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Preventative ‚Äî These work by keeping something from happening in the first place. Examples of this include: security awareness training, firewall, anti-virus, security guard and IPS.&lt;/li&gt;
  &lt;li&gt;Reactive ‚Äî Reactive countermeasures come into effect only after an event has already occurred.&lt;/li&gt;
  &lt;li&gt;Detective ‚Äî Examples of detective counter measures include: system monitoring, IDS, anti-virus, motion detectors and IPS.&lt;/li&gt;
  &lt;li&gt;Administrative ‚Äî These controls are the process of developing and ensuring compliance with policy and procedures. These use policy methods to protect an asset.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So‚Ä¶.whats the conclusion?&lt;/p&gt;

&lt;p&gt;Well, I would think of it as an analogy to the Marvel Comics. Hardening is Captain America and Countermeasures are like Iron Man. Lemme explain.. &lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/img/hdncntr/2.jpg&quot; alt=&quot;Full-width image&quot; class=&quot;lead&quot; width=&quot;80&quot; height=&quot;50&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Captain America was made into a more powerful soldier, hence, if I may, his abilities were hardened. His physique completely changed while his core remained the same, just like hardening of protocols and software architecture.&lt;/li&gt;
  &lt;li&gt;Tony Stark made a super suit to defend the world from outer space threats. He did not make any changes to himself for this, the suit was an outer protective cover as a countermeasure.&lt;br /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Both of these heroes in cyber security are essential and one can‚Äôt really compare. However, it maybe better to have hardened protocols rather countermeasures. Still countermeasures are always going to be exist because when it comes to cyber security, one can‚Äôt be 100% sure. It is important to note that the implementation of both affects the quality of their purpose.&lt;/p&gt;

&lt;p&gt;Image credit: &lt;a href=&quot;http://www.infoguardsecurity.com/system-hardening-and-cyber-security/&quot; target=&quot;_blank&quot;&gt;Infoguard Cybersecurity&lt;/a&gt;,&lt;a href=&quot;https://images.techhive.com/images/article/2015/09/thinkstockphotos-479801072-100611728-large.jpg&quot; target=&quot;_blank&quot;&gt;Techhive&lt;/a&gt;&lt;/p&gt;</content><author><name>Aneesh Dua</name><email>workstuff.dua@gmail.com</email></author><category term="tblog" /><summary type="html">Cyber Attacks are exponentially increasing by the day. The omnipresence of Internet enabled devices around us makes such attacks terrorizing for us. Thus, to resist such threats, it is essential to develop mechanisms and protect our devices and networks. There are mainly two ways to go about it, either we build countermeasures against attacks or either we implement hardening of devices and connection methods. How should we go about it? Lets discuss‚Ä¶‚Ä¶.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/hdncntr/1.jpg" /><media:content medium="image" url="http://localhost:4000/assets/img/hdncntr/1.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">DDoS-the Immortal hacks of the Internet</title><link href="http://localhost:4000/tblog/2019-05-18-ddos/" rel="alternate" type="text/html" title="DDoS-the Immortal hacks of the Internet" /><published>2019-05-18T00:00:00+05:30</published><updated>2019-05-18T00:00:00+05:30</updated><id>http://localhost:4000/tblog/ddos</id><content type="html" xml:base="http://localhost:4000/tblog/2019-05-18-ddos/">&lt;p&gt;Distributed Denial of Service(DDoS) Attacks have thronged the World Wide Web for the past 15 years. Even today we encounter websites that are ‚Äúdown‚Äù a.k.a unavailable and the reason for that more often than not are DDoS attacks. Even though the principle of these have remained the same, we still don‚Äôt have a fool proof way of preventing them. Not beating about the bush, let me throw light as to what they actually are and why they are still a cyber security challenge.&lt;/p&gt;

&lt;h2 id=&quot;what-it-is&quot;&gt;What it is?&lt;/h2&gt;

&lt;p&gt;A denial-of-service(DOS) attack is where hackers render a site inaccessible to legitimate customers. Hackers do this by overwhelming the website with traffic and data until the website crashes. Although denial-of-service attacks do not have a direct financial cost to the victims, the indirect cost of lost sales can be high not to mention the frustration of getting the website up and running again.
E-commerce websites are the most likely targets of denial-of-service attacks. That said, hackers have been known to go after different types of high-profile businesses including media agencies and government organizations.
Besides keeping your anti-virus software and security patches up-to-date, you should also be monitoring your traffic reports to protect against a denial-of-service attack. A sudden increase in traffic or other strange traffic patterns could be an early sign of this type of attack.
A distributed denial of service attack (DDoS) is a special type of denial of service attack. The principle is the same, but the malicious traffic is generated from multiple sources ‚Äî although orchestrated from one central point. The fact that the traffic sources are distributed ‚Äî often throughout the world ‚Äî makes a DDoS attack much harder to block than one originating from a single IP address.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/img/ddos/2.png&quot; alt=&quot;Full-width image&quot; class=&quot;lead&quot; width=&quot;800&quot; height=&quot;100&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;motivation-behind-ddos-attacks&quot;&gt;Motivation behind DDoS attacks&lt;/h2&gt;

&lt;p&gt;The trend of DDoS attacks is towards shorter attack duration, but bigger packet-per-second attack volume.
Attackers are primarily motivated by:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Rebellion‚Äî DDoS attacks as a means of targeting websites hackers disagree with ideologically.&lt;/li&gt;
  &lt;li&gt;Business rivalry‚Äî Businesses can use DDoS attacks on their rivals to gain the customers of the other.&lt;/li&gt;
  &lt;li&gt;Fun‚ÄîScript-kiddies use pre-written scripts or softwre to launch DDoS attacks. The perpetrators of these attacks are typically bored.&lt;/li&gt;
  &lt;li&gt;Cyber warfare ‚Äî Countries these days have engaged in Cyber Warfare. Most of us are unaware of such events as they happen quietly on the Dark Web. Government authorized DDoS attacks are an example of the latter&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;taxonomy&quot;&gt;Taxonomy:&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Volume Based Attacks&lt;br /&gt;
Includes UDP floods, ICMP floods, and other spoofed-packet floods. The attack‚Äôs goal is to saturate the bandwidth of the attacked site, and magnitude is measured in bits per second (Bps).&lt;/li&gt;
  &lt;li&gt;Protocol Attacks&lt;br /&gt;
Includes SYN floods, fragmented packet attacks, Ping of Death, Smurf DDoS and more. This type of attack consumes actual server resources, or those of intermediate communication equipment, such as firewalls and load balancers, and is measured in packets per second (Pps).&lt;/li&gt;
  &lt;li&gt;Application Layer Attacks&lt;br /&gt;
Includes low-and-slow attacks, GET/POST floods, attacks that target Apache, Windows or OpenBSD vulnerabilities and more. Comprised of seemingly legitimate and innocent requests, the goal of these attacks is to crash the web server, and the magnitude is measured in Requests per second (Rps).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;where-do-we-stand&quot;&gt;Where do we stand?&lt;/h2&gt;
&lt;p&gt;DDoS attacks are becoming increasingly commonplace, according to research published by Corero Network Security at the end of 2017. Its DDoS Trends and Analysis report found that the number of attacks increased by 35% between Q2 2017 and Q3 2017.&lt;/p&gt;

&lt;p&gt;One reason for their increased prevalence is the increasing number of insecure Internet of Things (IoT) devices that are being infected and recruited into botnets such as Reaper.
The volume of data launched at DDoS attack victims has also gone up significantly, largely thanks to amplification attacks such as the memcached amplification attack technique. Earlier this year, cyber-criminals launched some 15,000 memcached attacks, including an attack on GitHub that maxed out at an astonishing 1.35 Tbps(Tera Bits per second).
There is no cure that fits all. There is no single fool proof method that can prevent or even stop a ddos attack due to the variety of the latter. So what do we do for such a disease?
We Vaccinate&lt;/p&gt;

&lt;h2 id=&quot;how-to-build-resistance&quot;&gt;How to Build Resistance&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Buy more bandwidth(than you might ever need)
Of all the ways to prevent DDoS attacks, the most basic step you can take to make your infrastructure ‚ÄúDDoS resistant‚Äù is to ensure that you have enough bandwidth to handle spikes in traffic that may be caused by malicious activity.
In the past it was possible to avoid DDoS attacks by ensuring that you had more bandwidth at your disposal than any attacker was likely to have. But with the rise of amplification attacks, this is no longer practical. Instead, buying more bandwidth now raises the bar which attackers have to overcome before they can launch a successful DDoS attack, but by itself, purchasing more bandwidth is not a DDoS attack solution.
Even if you bought extra 100 percent ‚Äî or 500 percent ‚Äî that likely won‚Äôt stop a DDoS attack. But it may give you a few extra minutes to act before your resources are overwhelmed completely. So we go from seconds to disaster to minutes to stopping the disaster.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Build redundancy into your infrastructure
To make it as hard as possible for an attacker to successfully launch a DDoS attack against your servers, make sure you spread them across multiple data centers with a good load balancing system to distribute traffic between them. If possible, these data centers should be in different countries, or at least in different regions of the same country.
For this strategy to be truly effective, it‚Äôs necessary to ensure that the data centers are connected to different networks and that there are no obvious network bottlenecks or single points of failure on these networks.
Distributing your severs geographically and topographically will make it hard for an attacker to successfully attack more than a portion of your servers, leaving other servers unaffected and capable of taking on at least some of the extra traffic that the affected servers would normally handle.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Configure your network hardware against DDoS attacks
There are a number of simple hardware configuration changes you can take to help prevent a DDoS attack.
For example, configuring your firewall or router to drop incoming ICMP packets or block DNS responses from outside your network (by blocking UDP port 53) can help prevent certain DNS and ping-based volumetric attacks.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Deploy Anti-DDoS software modules
Your servers should be protected by network firewalls and more specialized web application firewalls, and you should probably use load balancers as well.Amazon Web Services provide load balancers to websites hosted on their server(EC2)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Protect your DNS servers
Don‚Äôt forget that a malicious actor may be able to bring your web servers offline by DDoSing your DNS servers. For that reason it is important that your DNS servers have redundancy, and placing them in different data centers behind load balancers is also a good idea. A better solution may even be to move to a cloud-based DNS provider that can offer high bandwidth and multiple points-of-presence in data centers around the world. These services are specifically designed with DDoS prevention in mind.
However‚Ä¶‚Ä¶
Preventing a DDoS attack when malicious actors can launch over 1 Tbps at your servers is almost impossible, and that means that it is more than important than ever to understand how to stop a DDoS attack after it has started to affect your operations. Here are some tips for when you are under such an attack.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Identify the DDoS attack early
The detection phase requires analysis of the running system to discover malicious traffic that leads to a DDoS attack. Detection involves a sophisticated approach to identify large unexpected traffic against a web server. Most of the detection techniques were applied to form DDoS detection known as pattern matching, clustering, statistical methods, deviation analysis, associations, and correlation. Formation of detection usually employs data history as the main source to train the data to generate a threshold which will be assigned to a parameter via a specific method to count the GET request received.
If you run your own servers, then you need to be able to identify when you are under attack. That‚Äôs because the sooner you can establish that problems with your website are due to a DDoS attack, the sooner you can stop the DDoS attack.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Call your ISP or hosting provider
The next step is to call your ISP (or hosting provider if you do not host your own Web server), tell them you are under attack, and ask for help. Keep emergency contacts for your ISP or hosting provider readily available so you can do this quickly. Depending on the strength of the attack, the ISP or hoster may already have detected it ‚Äî or they may themselves start to be overwhelmed by the attack.
You stand a better chance of withstanding a DDoS attack if your Web server is located in a hosting center than if you run it yourself. That‚Äôs because its data center will likely have far higher bandwidth links and higher capacity routers than your company has, and its staff will probably have more experience dealing with attacks. Having your Web server located with a hoster will also keep DDoS traffic aimed at your Web server off your corporate LAN so at least that part of your business ‚Äî including email and possibly voice over IP (VoIP) services ‚Äî should operate normally during an attack.
‚ÄúIt can be very costly for a hosting company to allow a DDoS onto their network because it consumes a lot of bandwidth and can affect other customers, so the first thing we might do is black hole you for a while,‚Äù said Liam Enticknap, a network operations engineer at PEER 1 hosting.
Tim Pat Dufficy, managing director of ISP and hosting company ServerSpace, agreed. ‚ÄúThe first thing we do when we see a customer under attack is log onto our routers and stop the traffic getting onto our network,‚Äù he says. ‚ÄúThat takes about two minutes to propagate globally using BGP (border gateway protocol) and then traffic falls off.‚Äù
If that was the end of the story, the DDoS attack would still be successful. To get the website back online, your ISP or hosting company may divert traffic to a ‚Äúscrubber,‚Äù where the malicious packets can be removed before the legitimate ones are be sent on to your Web server.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Create a DDoS playbook
The best way to ensure that your organization reacts as quickly and effectively as possible to stop a DDoS attack is to create a playbook that documents in detail every step of a pre-planned response when an attack is detected.
This should include the actions detailed above, with contact names and telephone numbers of all those who may need to be brought into action as part of the playbook‚Äôs plan. DDoS mitigation companies can help with this by running a simulated DDoS attack, enabling you to develop and refine a rapid corporate procedure for reacting to a real attack.
An important part of your planned response to a DDoS attack that should not be overlooked is how you communicate the problem to customers. DDoS attacks can last as long as 24 hours, and good communication can ensure that the cost to your business is minimized while you remain under attack.&lt;br /&gt;&lt;br /&gt;
As of now there isn‚Äôt any silver bullet for DDoS attacks, the quest goes on!!&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Image credit: &lt;a href=&quot;http://www.ebuyer.com/&quot; target=&quot;_blank&quot;&gt;Ebuyer&lt;/a&gt;,&lt;a href=&quot;https://www.cloudflare.com/&quot; target=&quot;_blank&quot;&gt;Cloudfare&lt;/a&gt;&lt;/p&gt;</content><author><name>Aneesh Dua</name><email>workstuff.dua@gmail.com</email></author><category term="tblog" /><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/ddos/1.png" /><media:content medium="image" url="http://localhost:4000/assets/img/ddos/1.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Ever heard of E-conning?</title><link href="http://localhost:4000/tblog/2019-05-13-phishing/" rel="alternate" type="text/html" title="Ever heard of E-conning?" /><published>2019-05-13T00:00:00+05:30</published><updated>2019-05-13T00:00:00+05:30</updated><id>http://localhost:4000/tblog/phishing</id><content type="html" xml:base="http://localhost:4000/tblog/2019-05-13-phishing/">&lt;p class=&quot;lead&quot;&gt;It is one of the biggest cybersecurity threats of 2019. ‚ÄúPhishing‚Äù is the technical term for the act of conning someone online in order to steal their confidential and sensitive information. I would rather call it E-conning so as to simply state what it really is.If something sounds too good to be true‚Ä¶ there‚Äôs probably a scammer behind it.&lt;/p&gt;

&lt;h2 id=&quot;so-what-it-is&quot;&gt;So what it is?&lt;/h2&gt;
&lt;p&gt;Phishing in general means to copy a website or email and act as an authenticated person in order to trick the victim into revealing sensitive information. Such attacks can lead to damaging losses in terms of identity theft,sensitive intellectual property and customer information, and national-security secrets.
Phishers always take advantage of human nature that generally ignores critical warning messages. Lack of awareness about the phishing attacks in the society is also the main reason why phishing attacks have been so much successful. Whenever any researcher came with some technique to prevent these attacks, phishers try to Ô¨Ånd out associated loophole to commit successful attacks.&lt;/p&gt;

&lt;h2 id=&quot;what-damage-can-they-do&quot;&gt;What damage can they do?&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/img/phishing/1.jpg&quot; alt=&quot;Full-width image&quot; class=&quot;lead&quot; width=&quot;80&quot; height=&quot;50&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Theft of login credentials: Phisher steals login credentials of online services like eBay, Amazon and Gmail from the user using spoofed email as warning message to change password and provided hyperlink.&lt;/li&gt;
  &lt;li&gt;Theft of banking credentials: Online login credentials and credit card details such as card number, expiry and issue dates, cardholder‚Äôs name, CCV number and several other popular banking organizations like PayPal, OnlineSBI, HDFC and Citibank.&lt;/li&gt;
  &lt;li&gt;Capture of personal information: Personal information, such as address and telephone number, is highly saleable and in constant demand by direct marketing companies.&lt;/li&gt;
  &lt;li&gt;Theft of trade secrets and conÔ¨Ådential documents: With spear phishing techniques, phishers are targeting speciÔ¨Åc organizations for acquisition of proprietary information and used directly or sold to interested parties.&lt;/li&gt;
  &lt;li&gt;Fame and notoriety: A very interesting psychological aspect of phishing in which information is phished not for Ô¨Ånancial gain but carried out mainly to gain recognition and notoriety among their peers.&lt;/li&gt;
  &lt;li&gt;Exploit security holes: People who are curious to Ô¨Ånd out how robust a particular system is may try to write programs to break somebody else‚Äôs system to launch phishing attacks or to sell the compromised systems to other phishers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-does-a-bad-guy-actually-do-it&quot;&gt;How does a bad guy actually do it?&lt;/h2&gt;

&lt;h3 id=&quot;stage-1-planning-and-setup&quot;&gt;Stage 1: Planning and setup&lt;/h3&gt;
&lt;p&gt;In the Ô¨Årst step, the attackers identify the target organization or individual or a nation. Then, their task is to get details about the organization and its network. It can be done by visiting the place physically or monitor the trafÔ¨Åc going in and out of the network. The next step is to set up the attacks by using a feasible means, e.g., website or emails having malicious links, which may redirect the victim to some fraud web page.&lt;/p&gt;

&lt;h3 id=&quot;stage-2-phishingit-is-as-similar-to-fishing-as-it-sounds&quot;&gt;Stage 2: Phishing(it is as similar to fishing as it sounds)&lt;/h3&gt;
&lt;p&gt;The next step is to send these spoofed emails or links, e.g., masqueraded as some reputed banking organization to the victim using the collected email addresses, which ask user to update some information urgently by clicking on some malicious link. The emails might be sent to individuals or speciÔ¨Åc person in an organization. Basically, they send out such malicious links and wait for the fish to get caught.&lt;/p&gt;

&lt;h3 id=&quot;stage-3-break-ininÔ¨Åltration&quot;&gt;Stage 3: Break-in/inÔ¨Åltration&lt;/h3&gt;
&lt;p&gt;As soon as the victim(fish) opens the fraud link, either a malware is installed on the system which allows the attacker to intrude the system and change its conÔ¨Åguration or access rights are changed accordingly. In other cases, it might lead to some fake page that asks for credentials.&lt;/p&gt;

&lt;h3 id=&quot;stage-4data-collection&quot;&gt;Stage 4:Data collection&lt;/h3&gt;
&lt;p&gt;Once the attackers get access to the user‚Äôs system, the required data are extracted, and if the user gives his account details to the attacker, they can now access his/her account, and this may lead to Ô¨Ånancial losses to the victim. In case of malware attacks, now the attacker may get remote access to the system and get the data he/she wants whatsoever, or the compromised systems could be used for DDoS attacks, etc.&lt;/p&gt;

&lt;h3 id=&quot;stage-5-break-outexÔ¨Åltration&quot;&gt;Stage 5: Break-out/exÔ¨Åltration&lt;/h3&gt;
&lt;p&gt;After getting the required information, the phisher now removes all the evidences, i.e., the false websites accounts. It is also observed that they track the degree of success of their attack for reÔ¨Åning future attacks.&lt;/p&gt;

&lt;h2 id=&quot;how-to-stay-safe&quot;&gt;How to stay safe?&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/blog/assets/img/phishing/3.png&quot; alt=&quot;Full-width image&quot; class=&quot;lead&quot; width=&quot;80&quot; height=&quot;50&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Always pay attention to the sender email and the URL of the links in the email. These provide you with enough indications of the authenticity of the email.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/assets/img/phishing/4.png&quot; alt=&quot;Full-width image&quot; class=&quot;lead&quot; width=&quot;80&quot; height=&quot;50&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This webpage looks exactly the same as of the real Gmail sign in page. But as you can observe that the URL is the not the actual one. So look closely!! Hackers can easily replicate the websites so you should check the URL always.
One can also opt for extensions like the PhishDetector for Google Chrome in order to stay safe from all kinds of phishing.
Organizations can also opt for filtering methods for emails,links on the computers on their network:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Email Filtering&lt;/li&gt;
  &lt;li&gt;URL-Filters&lt;/li&gt;
  &lt;li&gt;Script Filters&lt;/li&gt;
  &lt;li&gt;Sender Based Filters
The filtering softwares are not very efficient and only cater to a certain previously known data set of emails/websites. The method of user training cannot guarantee prevention of phishing attacks. Overall, there is no fool-proof way to deal with phishing attacks.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;present-scenario&quot;&gt;Present Scenario&lt;/h2&gt;
&lt;p&gt;Phishing attacks are now becoming pervasive and sophisticated. Phishing has spread beyond email to include VOIP, SMS, instant messaging, social networking sites, and even massively multiplayer games.Criminals have also shifted from sending mass-email messages, hoping to trick anyone, to more selective ‚Äúspear-phishing‚Äù attacks that use relevant contextual information to trick specific victims.
The latest trend is phishing using Chatbots. According to a survey, users trust chatbots more than people online possibly as they think the bot is programmed.However, hackers have been found to change the code of the chatbot thus asking the user for sensitive info. Evidently, users give such details to chatbots and become phishing victims.&lt;/p&gt;

&lt;p&gt;IoT(Internet of Things) devices are also becoming a victim of phishing due to their increasing popularity.IoT is a very fast evolving architecture these days connecting every day-to-day object making our lives more comfortable. Yes i am talking about all the SMART things in your house‚Ää‚Äî‚ÄäSmart TV, Smart Refrigerator, Smart Plugs and whatever else you have. üòúBut, due to limited resources available to the IoT devices, their security mechanism is close to absent which makes them a very easy target for the attackers. IoT devices are sent malware which spreads like botnets and the devices have to be taken offline and cleaned of malware.
So don‚Äôt be quick to click! Ciao!&lt;/p&gt;

&lt;p&gt;Image credit: &lt;a href=&quot;https://imgflip.com/&quot; target=&quot;_blank&quot;&gt;Imgflip&lt;/a&gt;,&lt;a href=&quot;http://komando.com/&quot; target=&quot;_blank&quot;&gt;Komando&lt;/a&gt;,&lt;a href=&quot;http://heimdalsecurity.com/&quot; target=&quot;_blank&quot;&gt;HeimdalSecurity&lt;/a&gt;,&lt;/p&gt;</content><author><name>Aneesh Dua</name><email>workstuff.dua@gmail.com</email></author><category term="tblog" /><summary type="html">It is one of the biggest cybersecurity threats of 2019. ‚ÄúPhishing‚Äù is the technical term for the act of conning someone online in order to steal their confidential and sensitive information. I would rather call it E-conning so as to simply state what it really is.If something sounds too good to be true‚Ä¶ there‚Äôs probably a scammer behind it.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/img/phishing/2.jpg" /><media:content medium="image" url="http://localhost:4000/assets/img/phishing/2.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>